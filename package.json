{
  "name": "stdlibschema",
  "version": "1.0.3",
  "description": "Enhanced Angular Schematics with standard library utilities and executable specifications framework",
  "main": "dist/index.js",
  "types": "dist/index.d.ts",
  "scripts": {
    "build": "tsc -p tsconfig.json",
    "build:watch": "tsc -p tsconfig.json --watch",
    "test": "jest",
    "test:watch": "jest --watch",
    "test:coverage": "jest --coverage",
    "test:stdlib": "jest --selectProjects=stdlib",
    "test:specs": "jest --selectProjects=specs",
    "test:schematics": "jest --selectProjects=schematics",
    "test:other": "jest --selectProjects=other",
    "test:coverage:stdlib": "jest --selectProjects=stdlib --coverage",
    "test:coverage:specs": "jest --selectProjects=specs --coverage",
    "test:coverage:schematics": "jest --selectProjects=schematics --coverage",
    "test:coverage:other": "jest --selectProjects=other --coverage",
    "test:coverage:parallel": "npm-run-all --parallel test:coverage:stdlib test:coverage:specs test:coverage:schematics test:coverage:other",
    "coverage": "ts-node get-coverage-unified.ts",
    "coverage:quick": "ts-node get-coverage-unified.ts --quick",
    "coverage:batched": "node scripts/coverage-batched.js",
    "test:fast": "jest --selectProjects=stdlib --testNamePattern='(Core|Utilities)' --maxWorkers=2",
    "test:functional": "jest --testMatch='**/functional/**/*.spec.ts' --runInBand",
    "test:agents": "jest --testMatch='**/agents/**/*.spec.ts' --maxWorkers=1",
    "test:redis": "jest --testMatch='**/redis/**/*.spec.ts' --maxWorkers=1",
    "test:orchestration": "jest --testMatch='**/orchestration/**/*.spec.ts' --maxWorkers=1",
    "test:performance": "node scripts/test-performance.js",
    "test:dashboard": "node scripts/testing-dashboard.js",
    "test:dashboard:watch": "node scripts/testing-dashboard.js --watch",
    "test:dashboard:history": "node scripts/testing-dashboard.js --history",
    "cache:stats": "node scripts/cache-manager.js stats",
    "cache:warm": "node scripts/cache-manager.js warm",
    "cache:clean": "node scripts/cache-manager.js clean",
    "cache:optimize": "node scripts/cache-manager.js optimize",
    "cache:rebuild": "node scripts/cache-manager.js rebuild",
    "memory:monitor": "node scripts/memory-guard.js monitor",
    "memory:guard": "node scripts/memory-guard.js guard",
    "memory:leaks": "node scripts/memory-guard.js analyze",
    "lint": "eslint src/**/*.ts",
    "lint:fix": "eslint src/**/*.ts --fix",
    "format": "prettier --write src/**/*.ts",
    "format:check": "prettier --check src/**/*.ts",
    "docs": "typedoc src/index.ts",
    "make:docs": "npx tsx scripts/generate-docs.ts",
    "prepublishOnly": "npm run build && npm run test && npm run lint",
    "schematics:build": "tsc -p tsconfig.json",
    "schematics:test": "npm run schematics:build && jasmine src/**/*_spec.js",
    "generate:signals-component": "npm run build && schematics .:generate-signals-component",
    "signals:component": "npm run build && schematics .:generate-signals-component",
    "signals:test": "node test-signals-schematic.js",
    "analyze:deps": "npm run build && node tools/analyze-deps.js",
    "lint:deps": "npm run build && node tools/analyze-deps.js",
    "dependency:check": "node tools/analyze-deps.js",
    "context:check": "node tools/context-monitor.js",
    "coverage:parallel": "ts-node get-coverage-unified.ts --parallel",
    "coverage:sequential": "ts-node get-coverage-unified.ts --sequential",
    "latency:monitor": "node scripts/latency-monitor.js",
    "latency:dashboard": "node scripts/latency-dashboard.js",
    "latency:export": "node scripts/latency-export.js",
    "latency:analyze": "node scripts/latency-analyzer.js",
    "metrics:collect": "node scripts/metrics-collector.js",
    "metrics:stream": "node scripts/metrics-stream.js",
    "metrics:aggregate": "node scripts/metrics-aggregator.js",
    "metrics:alerts": "node scripts/metrics-alerts.js",
    "cache:analyze": "node scripts/cache-analyzer.js",
    "cache:optimize:tanstack": "node scripts/tanstack-optimizer.js",
    "cache:prefetch": "node scripts/cache-prefetch.js",
    "vercel:deploy": "vercel --prod",
    "vercel:dev": "vercel dev",
    "vercel:logs": "vercel logs --follow",
    "blc001:start": "ts-node src/blc001/scripts/start-bridge.ts",
    "blc001:server": "ts-node src/blc001/scripts/start-server.ts",
    "blc001:client": "ts-node src/blc001/scripts/start-client.ts",
    "blc001:test": "jest --testMatch='**/blc001/**/*.spec.ts'",
    "blc001:test:integration": "jest --testMatch='**/blc001/**/*.integration.spec.ts'",
    "blc001:monitor": "ts-node src/blc001/scripts/monitor.ts",
    "blc001:sync": "ts-node src/blc001/scripts/force-sync.ts",
    "blc001:status": "ts-node src/blc001/scripts/status.ts",
    "blc001:dev": "npm-run-all --parallel blc001:server blc001:monitor",
    "blc001:validate": "ts-node src/blc001/scripts/validate-config.ts",
    "blc010:server": "ts-node src/blc010/scripts/start-server.ts",
    "blc001:health": "ts-node src/blc001/scripts/health-check.ts",
    "blc001:logs": "tail -f logs/blc001/*.log",
    "detect:antipatterns": "ts-node src/specs/rules/testing/detect-antipatterns.ts",
    "detect:antipatterns:report": "ts-node src/specs/rules/testing/detect-antipatterns.ts . antipattern-report.json",
    "fix:test-antipatterns": "echo 'ğŸ”§ Test antipattern auto-fix not yet implemented. See antipattern detection report for manual fixes.'"
  },
  "keywords": [
    "angular",
    "schematics",
    "devkit",
    "code-generation",
    "typescript",
    "ast",
    "standards",
    "verification"
  ],
  "author": "stdlibSchema Contributors",
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "https://github.com/stdlibschema/stdlibschema.git"
  },
  "bugs": {
    "url": "https://github.com/stdlibschema/stdlibschema/issues"
  },
  "homepage": "https://github.com/stdlibschema/stdlibschema#readme",
  "dependencies": {
    "@angular-devkit/core": "^20.1.5",
    "@angular-devkit/schematics": "^20.1.5",
    "@angular/animations": "^20.1.4",
    "@angular/cdk": "^20.1.4",
    "@angular/cli": "^20.1.4",
    "@angular/common": "^20.1.4",
    "@angular/core": "^20.1.4",
    "@angular/forms": "^20.1.4",
    "@angular/platform-browser": "^20.1.4",
    "@angular/platform-browser-dynamic": "^20.1.4",
    "@angular/router": "^20.1.4",
    "@anthropic-ai/sdk": "^0.58.0",
    "@tanstack/query-core": "^5.81.5",
    "@tanstack/react-query": "^5.81.5",
    "@types/cors": "^2.8.19",
    "@types/dompurify": "^3.0.5",
    "@types/redis": "^4.0.10",
    "@types/ws": "^8.18.1",
    "cors": "^2.8.5",
    "dompurify": "^3.2.6",
    "express": "^4.21.2",
    "idb": "^8.0.3",
    "isolated-vm": "^6.0.0",
    "minimatch": "^5.1.0",
    "redis": "^5.7.0",
    "rxjs": "^7.8.1",
    "typescript": "^5.8.3",
    "ws": "^8.18.3",
    "zod": "^3.25.76"
  },
  "devDependencies": {
    "@angular-devkit/schematics-cli": "^20.1.5",
    "@schematics/angular": "^20.1.5",
    "@types/ajv": "^1.0.4",
    "@types/express": "^4.17.23",
    "@types/jest": "^29.5.14",
    "@types/json-schema": "^7.0.15",
    "@types/node": "^24.2.0",
    "@types/uuid": "^10.0.0",
    "@typescript-eslint/eslint-plugin": "^8.34.0",
    "@typescript-eslint/parser": "^8.34.0",
    "ajv": "^8.12.0",
    "chalk": "^5.5.0",
    "eslint": "^8.37.0",
    "glob": "^11.0.3",
    "gray-matter": "^4.0.3",
    "husky": "^8.0.3",
    "jest": "^29.7.0",
    "jest-junit": "^16.0.0",
    "lint-staged": "^13.2.0",
    "marked": "^16.0.0",
    "npm-run-all": "^4.1.5",
    "ora": "^8.2.0",
    "prettier": "^2.8.7",
    "reflect-metadata": "^0.2.2",
    "ts-jest": "^29.1.4",
    "tsx": "^4.20.3",
    "typedoc": "^0.28.5",
    "typedoc-plugin-markdown": "^4.6.4"
  },
  "peerDependencies": {
    "@angular-devkit/schematics": "^20.1.5"
  },
  "schematics": "./src/collection.json",
  "ng-add": {
    "save": "devDependencies"
  },
  "engines": {
    "node": ">=24.5.0",
    "npm": ">=10.0.0"
  },
  "lint-staged": {
    "*.ts": [
      "eslint --fix",
      "prettier --write"
    ]
  }
}
